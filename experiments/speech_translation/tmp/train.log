2025-05-24 01:26:41 | INFO | fairseq.tasks.text_to_speech | Please install tensorboardX: pip install tensorboardX
2025-05-24 01:26:42 | INFO | datasets | PyTorch version 1.13.1 available.
2025-05-24 01:26:43 | INFO | fairseq_cli.train | {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 100, 'log_format': None, 'log_file': None, 'aim_repo': None, 'aim_run_hash': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': False, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 128, 'fp16_scale_window': None, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': None, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': None, 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': False, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_base_algorithm': 'localsgd', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': False, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'not_fsdp_flatten_parameters': False}, 'dataset': {'_name': None, 'num_workers': 4, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 40000, 'batch_size': None, 'required_batch_size_multiple': 8, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train_st', 'valid_subset': 'dev_st', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': False, 'max_tokens_valid': 40000, 'batch_size_valid': None, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0, 'grouped_shuffling': False, 'update_epoch_batch_itr': False, 'update_ordered_indices_seed': False}, 'optimization': {'_name': None, 'max_epoch': 0, 'max_update': 100000, 'stop_time_hours': 0.0, 'clip_norm': 10.0, 'sentence_avg': False, 'update_freq': [8], 'lr': [0.002], 'stop_min_lr': -1.0, 'use_bmuf': False, 'skip_remainder_batch': False, 'debug_param_names': False}, 'checkpoint': {'_name': None, 'save_dir': '/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', 'restore_file': 'checkpoint_last.pt', 'continue_once': None, 'finetune_from_model': None, 'reset_dataloader': False, 'reset_lr_scheduler': False, 'reset_meters': False, 'reset_optimizer': False, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': 1, 'keep_best_checkpoints': 10, 'no_save': False, 'no_epoch_checkpoints': False, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 1}, 'generation': {'_name': None, 'beam': 5, 'beam_mt': 0, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'max_len_a_mt': 0.0, 'max_len_b_mt': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'lenpen_mt': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'eos_token': None}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': Namespace(_name='s2t_decoder_only_MLTA_cross_xm', activation_dropout=0.15, activation_fn='relu', adam_betas=(0.9, 0.999), adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, aim_repo=None, aim_run_hash=None, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='s2t_decoder_only_MLTA_cross_xm', attention_dropout=0.15, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='accuracy', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=10.0, combine_valid_subsets=None, config_yaml='config_st.yaml', continue_once=None, conv_channels=1024, conv_kernel_sizes='5,5', conv_out_channels=256, conv_version='s2t_transformer', cpu=False, cpu_offload=False, criterion='label_smoothed_cross_entropy', curriculum=0, data='/scratch/kd502/save/MuST-C/en-de', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', debug_param_names=False, decoder_attention_heads=8, decoder_down_rate=2, decoder_embed_dim=512, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_kv_lora_rank=256, decoder_layerdrop=0.0, decoder_layers=9, decoder_learned_pos=False, decoder_normalize_before=True, decoder_output_dim=512, decoder_q_lora_rank=0, decoder_qk_nope_head_dim=64, decoder_qk_rope_head_dim=32, decoder_type='MLTA', decoder_v_head_dim=64, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, dropout=0.15, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_ffn_embed_dim=2048, encoder_freezing_updates=0, encoder_layers=12, encoder_normalize_before=True, encoder_projector_ds_rate=1, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', gradient_as_bucket_view=False, grouped_shuffling=False, heartbeat_timeout=-1, ignore_prefix_size=0, ignore_unused_valid_subsets=False, input_channels=1, keep_best_checkpoints=10, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=1, label_smoothing=0.1, load_checkpoint_on_all_dp_ranks=False, load_pretrained_encoder_from='/scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.ptls', localsgd_frequency=3, log_file=None, log_format=None, log_interval=100, lr=[0.002], lr_scheduler='inverse_sqrt', max_epoch=0, max_source_positions=6000, max_target_positions=1024, max_tokens=40000, max_tokens_valid=40000, max_update=100000, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, model_parallel_size=1, multitask_config_yaml=None, no_cross_attention=True, no_epoch_checkpoints=False, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, not_fsdp_flatten_parameters=False, nprocs_per_node=1, num_shards=1, num_workers=4, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quantization_config_path=None, report_accuracy=True, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', save_dir='/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, shard_id=0, share_decoder_input_output_embed=False, simul_type=None, skip_invalid_size_inputs_valid_test=False, skip_remainder_batch=False, slowmo_base_algorithm='localsgd', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, task='speech_to_text', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, tpu=False, train_subset='train_st', unk=3, update_epoch_batch_itr=False, update_freq=[8], update_ordered_indices_seed=False, use_audio_input=False, use_bmuf=False, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, user_dir=None, valid_subset='dev_st', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=10000, weight_decay=0.0, write_checkpoints_asynchronously=False, zero_sharding='none'), 'task': Namespace(_name='speech_to_text', activation_dropout=0.15, activation_fn='relu', adam_betas=(0.9, 0.999), adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, aim_repo=None, aim_run_hash=None, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='s2t_decoder_only_MLTA_cross_xm', attention_dropout=0.15, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='accuracy', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=10.0, combine_valid_subsets=None, config_yaml='config_st.yaml', continue_once=None, conv_channels=1024, conv_kernel_sizes='5,5', conv_out_channels=256, conv_version='s2t_transformer', cpu=False, cpu_offload=False, criterion='label_smoothed_cross_entropy', curriculum=0, data='/scratch/kd502/save/MuST-C/en-de', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', debug_param_names=False, decoder_attention_heads=8, decoder_down_rate=2, decoder_embed_dim=512, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_kv_lora_rank=256, decoder_layerdrop=0.0, decoder_layers=9, decoder_learned_pos=False, decoder_normalize_before=True, decoder_output_dim=512, decoder_q_lora_rank=0, decoder_qk_nope_head_dim=64, decoder_qk_rope_head_dim=32, decoder_type='MLTA', decoder_v_head_dim=64, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, dropout=0.15, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_ffn_embed_dim=2048, encoder_freezing_updates=0, encoder_layers=12, encoder_normalize_before=True, encoder_projector_ds_rate=1, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', gradient_as_bucket_view=False, grouped_shuffling=False, heartbeat_timeout=-1, ignore_prefix_size=0, ignore_unused_valid_subsets=False, input_channels=1, keep_best_checkpoints=10, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=1, label_smoothing=0.1, load_checkpoint_on_all_dp_ranks=False, load_pretrained_encoder_from='/scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.ptls', localsgd_frequency=3, log_file=None, log_format=None, log_interval=100, lr=[0.002], lr_scheduler='inverse_sqrt', max_epoch=0, max_source_positions=6000, max_target_positions=1024, max_tokens=40000, max_tokens_valid=40000, max_update=100000, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, model_parallel_size=1, multitask_config_yaml=None, no_cross_attention=True, no_epoch_checkpoints=False, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, not_fsdp_flatten_parameters=False, nprocs_per_node=1, num_shards=1, num_workers=4, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quantization_config_path=None, report_accuracy=True, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', save_dir='/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, shard_id=0, share_decoder_input_output_embed=False, simul_type=None, skip_invalid_size_inputs_valid_test=False, skip_remainder_batch=False, slowmo_base_algorithm='localsgd', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, task='speech_to_text', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, tpu=False, train_subset='train_st', unk=3, update_epoch_batch_itr=False, update_freq=[8], update_ordered_indices_seed=False, use_audio_input=False, use_bmuf=False, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, user_dir=None, valid_subset='dev_st', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=10000, weight_decay=0.0, write_checkpoints_asynchronously=False, zero_sharding='none'), 'criterion': {'_name': 'label_smoothed_cross_entropy', 'label_smoothing': 0.1, 'report_accuracy': True, 'ignore_prefix_size': 0, 'sentence_avg': False}, 'optimizer': {'_name': 'adam', 'adam_betas': [0.9, 0.999], 'adam_eps': 1e-08, 'weight_decay': 0.0, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [0.002]}, 'lr_scheduler': {'_name': 'inverse_sqrt', 'warmup_updates': 10000, 'warmup_init_lr': -1.0, 'lr': [0.002]}, 'scoring': {'_name': 'bleu', 'pad': 1, 'eos': 2, 'unk': 3}, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}, 'simul_type': None}
2025-05-24 01:26:43 | INFO | fairseq.tasks.speech_to_text | dictionary size (spm_unigram8000_st.txt): 8,000
2025-05-24 01:26:43 | WARNING | fairseq.models.speech_to_text.s2t_transformer | skipped pretraining because /scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.ptls does not exist
2025-05-24 01:26:43 | WARNING | root | !!!!! MLTA is used !!!!!
2025-05-24 01:26:44 | INFO | fairseq_cli.train | S2TTransformerModel(
  (encoder): S2TTransformerEncoder(
    (dropout_module): FairseqDropout()
    (subsample): Conv1dSubsampler(
      (conv_layers): ModuleList(
        (0): Conv1d(80, 1024, kernel_size=(5,), stride=(2,), padding=(2,))
        (1): Conv1d(512, 1024, kernel_size=(5,), stride=(2,), padding=(2,))
      )
    )
    (embed_positions): SinusoidalPositionalEmbedding()
    (transformer_layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (6): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (7): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (8): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (9): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (10): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (11): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
    )
    (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (decoder): MLTADecoderOnly(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(8000, 512, padding_idx=1)
    (embed_positions): None
    (layers): ModuleList(
      (0): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (1): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (2): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (3): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (4): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (5): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (6): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (7): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (8): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
    )
    (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    (output_projection): Linear(in_features=512, out_features=8000, bias=False)
    (projector): EncoderProjectorConcat(
      (linear1): Linear(in_features=512, out_features=256, bias=True)
      (relu): ReLU()
      (linear2): Linear(in_features=256, out_features=512, bias=True)
    )
  )
)
2025-05-24 01:26:44 | INFO | fairseq_cli.train | task: SpeechToTextTask
2025-05-24 01:26:44 | INFO | fairseq_cli.train | model: S2TTransformerModel
2025-05-24 01:26:44 | INFO | fairseq_cli.train | criterion: LabelSmoothedCrossEntropyCriterion
2025-05-24 01:26:44 | INFO | fairseq_cli.train | num. shared model params: 78,119,808 (num. trained: 78,119,808)
2025-05-24 01:26:44 | INFO | fairseq_cli.train | num. expert model params: 0 (num. trained: 0)
2025-05-24 01:26:44 | INFO | fairseq.tasks.speech_to_text | pre-tokenizer: {'tokenizer': None}
2025-05-24 01:26:44 | INFO | fairseq.tasks.speech_to_text | tokenizer: {'bpe': 'sentencepiece', 'sentencepiece_model': '/scratch/kd502/save/MuST-C/en-de/spm_unigram8000_st.model'}
2025-05-24 01:26:44 | WARNING | fairseq.data.audio.data_cfg | Auto converting transforms into feature_transforms, but transforms will be deprecated in the future. Please update this in the config.
2025-05-24 01:26:44 | INFO | fairseq.data.audio.speech_to_text_dataset | 'dev_st' has 0.00% OOV
2025-05-24 01:26:44 | INFO | fairseq.data.audio.speech_to_text_dataset | SpeechToTextDataset(split="dev_st", n_samples=1_418, prepend_tgt_lang_tag=False, n_frames_per_step=1, shuffle=False, feature_transforms=CompositeAudioFeatureTransform(
    UtteranceCMVN(norm_means=True, norm_vars=True)
), waveform_transforms=None, dataset_transforms=CompositeAudioDatasetTransform(
))
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wq.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wkv_a.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wkv_b.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wo.bias
2025-05-24 01:26:44 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.output_projection.bias
2025-05-24 01:26:44 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2025-05-24 01:26:44 | INFO | fairseq.utils | rank   0: capabilities =  8.9  ; total memory = 47.478 GB ; name = NVIDIA RTX 6000 Ada Generation          
2025-05-24 01:26:44 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2025-05-24 01:26:44 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2025-05-24 01:26:44 | INFO | fairseq_cli.train | max tokens per device = 40000 and max sentences per device = None
2025-05-24 01:26:44 | INFO | fairseq.trainer | Preparing to load checkpoint /scratch/kd502/open-source/mtla/experiments/speech_translation/tmp/checkpoint_last.pt
2025-05-24 01:26:44 | INFO | fairseq.trainer | No existing checkpoint found /scratch/kd502/open-source/mtla/experiments/speech_translation/tmp/checkpoint_last.pt
2025-05-24 01:26:44 | INFO | fairseq.trainer | loading train data for epoch 1
2025-05-24 01:26:44 | INFO | fairseq.tasks.speech_to_text | pre-tokenizer: {'tokenizer': None}
2025-05-24 01:26:44 | INFO | fairseq.tasks.speech_to_text | tokenizer: {'bpe': 'sentencepiece', 'sentencepiece_model': '/scratch/kd502/save/MuST-C/en-de/spm_unigram8000_st.model'}
2025-05-24 01:26:46 | WARNING | fairseq.data.audio.data_cfg | Auto converting transforms into feature_transforms, but transforms will be deprecated in the future. Please update this in the config.
2025-05-24 01:26:50 | INFO | fairseq.data.audio.speech_to_text_dataset | 'train_st' has 0.00% OOV
2025-05-24 01:26:50 | INFO | fairseq.data.audio.speech_to_text_dataset | SpeechToTextDataset(split="train_st", n_samples=225_277, prepend_tgt_lang_tag=False, n_frames_per_step=1, shuffle=False, feature_transforms=CompositeAudioFeatureTransform(
    UtteranceCMVN(norm_means=True, norm_vars=True)
    SpecAugmentTransform(time_warp_w=0, freq_mask_n=1, freq_mask_f=27, time_mask_n=1, time_mask_t=100, time_mask_p=1.0)
), waveform_transforms=None, dataset_transforms=CompositeAudioDatasetTransform(
))
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | can_reuse_epoch_itr = True
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | reuse_dataloader = True
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | rebuild_batches = False
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | creating new batches for epoch 1
2025-05-24 01:26:50 | INFO | fairseq.trainer | NOTE: your device may support faster training with --fp16 or --amp
2025-05-24 01:26:50 | INFO | fairseq_cli.train | begin dry-run validation on "dev_st" subset
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | can_reuse_epoch_itr = True
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | reuse_dataloader = True
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | rebuild_batches = False
2025-05-24 01:26:50 | INFO | fairseq.tasks.fairseq_task | creating new batches for epoch 1
2025-05-24 01:26:51 | INFO | fairseq.data.iterators | grouped total_num_itrs = 491
2025-05-24 01:26:51 | INFO | fairseq.trainer | begin training epoch 1
2025-05-24 01:26:51 | INFO | fairseq_cli.train | Start iterating over samples
2025-05-24 01:29:35 | INFO | train_inner | epoch 001:    100 / 491 loss=11.899, nll_loss=11.691, total=12047.1, n_correct=916.27, ppl=3305.45, accuracy=7.606, wps=7525.7, ups=0.62, wpb=12047.1, bsz=471.8, num_updates=100, lr=2e-05, gnorm=2.337, clip=0, train_wall=163, gb_free=35.8, wall=170
2025-05-24 01:32:03 | INFO | fairseq.tasks.text_to_speech | Please install tensorboardX: pip install tensorboardX
2025-05-24 01:32:04 | INFO | datasets | PyTorch version 1.13.1 available.
2025-05-24 01:32:05 | INFO | fairseq_cli.train | {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 100, 'log_format': None, 'log_file': None, 'aim_repo': None, 'aim_run_hash': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': False, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 128, 'fp16_scale_window': None, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': None, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': None, 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': False, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_base_algorithm': 'localsgd', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': False, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'not_fsdp_flatten_parameters': False}, 'dataset': {'_name': None, 'num_workers': 4, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 40000, 'batch_size': None, 'required_batch_size_multiple': 8, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train_st', 'valid_subset': 'dev_st', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': False, 'max_tokens_valid': 40000, 'batch_size_valid': None, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0, 'grouped_shuffling': False, 'update_epoch_batch_itr': False, 'update_ordered_indices_seed': False}, 'optimization': {'_name': None, 'max_epoch': 0, 'max_update': 100000, 'stop_time_hours': 0.0, 'clip_norm': 10.0, 'sentence_avg': False, 'update_freq': [8], 'lr': [0.002], 'stop_min_lr': -1.0, 'use_bmuf': False, 'skip_remainder_batch': False, 'debug_param_names': False}, 'checkpoint': {'_name': None, 'save_dir': '/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', 'restore_file': 'checkpoint_last.pt', 'continue_once': None, 'finetune_from_model': None, 'reset_dataloader': False, 'reset_lr_scheduler': False, 'reset_meters': False, 'reset_optimizer': False, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': 1, 'keep_best_checkpoints': 10, 'no_save': False, 'no_epoch_checkpoints': False, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 1}, 'generation': {'_name': None, 'beam': 5, 'beam_mt': 0, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'max_len_a_mt': 0.0, 'max_len_b_mt': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'lenpen_mt': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'eos_token': None}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': Namespace(_name='s2t_decoder_only_MLTA_cross_xm', activation_dropout=0.15, activation_fn='relu', adam_betas=(0.9, 0.999), adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, aim_repo=None, aim_run_hash=None, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='s2t_decoder_only_MLTA_cross_xm', attention_dropout=0.15, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='accuracy', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=10.0, combine_valid_subsets=None, config_yaml='config_st.yaml', continue_once=None, conv_channels=1024, conv_kernel_sizes='5,5', conv_out_channels=256, conv_version='s2t_transformer', cpu=False, cpu_offload=False, criterion='label_smoothed_cross_entropy', curriculum=0, data='/scratch/kd502/save/MuST-C/en-de', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', debug_param_names=False, decoder_attention_heads=8, decoder_down_rate=2, decoder_embed_dim=512, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_kv_lora_rank=256, decoder_layerdrop=0.0, decoder_layers=9, decoder_learned_pos=False, decoder_normalize_before=True, decoder_output_dim=512, decoder_q_lora_rank=0, decoder_qk_nope_head_dim=64, decoder_qk_rope_head_dim=32, decoder_type='MLTA', decoder_v_head_dim=64, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, dropout=0.15, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_ffn_embed_dim=2048, encoder_freezing_updates=0, encoder_layers=12, encoder_normalize_before=True, encoder_projector_ds_rate=1, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', gradient_as_bucket_view=False, grouped_shuffling=False, heartbeat_timeout=-1, ignore_prefix_size=0, ignore_unused_valid_subsets=False, input_channels=1, keep_best_checkpoints=10, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=1, label_smoothing=0.1, load_checkpoint_on_all_dp_ranks=False, load_pretrained_encoder_from='/scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.ptls', localsgd_frequency=3, log_file=None, log_format=None, log_interval=100, lr=[0.002], lr_scheduler='inverse_sqrt', max_epoch=0, max_source_positions=6000, max_target_positions=1024, max_tokens=40000, max_tokens_valid=40000, max_update=100000, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, model_parallel_size=1, multitask_config_yaml=None, no_cross_attention=True, no_epoch_checkpoints=False, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, not_fsdp_flatten_parameters=False, nprocs_per_node=1, num_shards=1, num_workers=4, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quantization_config_path=None, report_accuracy=True, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', save_dir='/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, shard_id=0, share_decoder_input_output_embed=False, simul_type=None, skip_invalid_size_inputs_valid_test=False, skip_remainder_batch=False, slowmo_base_algorithm='localsgd', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, task='speech_to_text', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, tpu=False, train_subset='train_st', unk=3, update_epoch_batch_itr=False, update_freq=[8], update_ordered_indices_seed=False, use_audio_input=False, use_bmuf=False, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, user_dir=None, valid_subset='dev_st', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=10000, weight_decay=0.0, write_checkpoints_asynchronously=False, zero_sharding='none'), 'task': Namespace(_name='speech_to_text', activation_dropout=0.15, activation_fn='relu', adam_betas=(0.9, 0.999), adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, aim_repo=None, aim_run_hash=None, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='s2t_decoder_only_MLTA_cross_xm', attention_dropout=0.15, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='accuracy', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=10.0, combine_valid_subsets=None, config_yaml='config_st.yaml', continue_once=None, conv_channels=1024, conv_kernel_sizes='5,5', conv_out_channels=256, conv_version='s2t_transformer', cpu=False, cpu_offload=False, criterion='label_smoothed_cross_entropy', curriculum=0, data='/scratch/kd502/save/MuST-C/en-de', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', debug_param_names=False, decoder_attention_heads=8, decoder_down_rate=2, decoder_embed_dim=512, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_kv_lora_rank=256, decoder_layerdrop=0.0, decoder_layers=9, decoder_learned_pos=False, decoder_normalize_before=True, decoder_output_dim=512, decoder_q_lora_rank=0, decoder_qk_nope_head_dim=64, decoder_qk_rope_head_dim=32, decoder_type='MLTA', decoder_v_head_dim=64, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, dropout=0.15, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_ffn_embed_dim=2048, encoder_freezing_updates=0, encoder_layers=12, encoder_normalize_before=True, encoder_projector_ds_rate=1, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', gradient_as_bucket_view=False, grouped_shuffling=False, heartbeat_timeout=-1, ignore_prefix_size=0, ignore_unused_valid_subsets=False, input_channels=1, keep_best_checkpoints=10, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=1, label_smoothing=0.1, load_checkpoint_on_all_dp_ranks=False, load_pretrained_encoder_from='/scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.ptls', localsgd_frequency=3, log_file=None, log_format=None, log_interval=100, lr=[0.002], lr_scheduler='inverse_sqrt', max_epoch=0, max_source_positions=6000, max_target_positions=1024, max_tokens=40000, max_tokens_valid=40000, max_update=100000, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, model_parallel_size=1, multitask_config_yaml=None, no_cross_attention=True, no_epoch_checkpoints=False, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, not_fsdp_flatten_parameters=False, nprocs_per_node=1, num_shards=1, num_workers=4, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quantization_config_path=None, report_accuracy=True, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', save_dir='/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, shard_id=0, share_decoder_input_output_embed=False, simul_type=None, skip_invalid_size_inputs_valid_test=False, skip_remainder_batch=False, slowmo_base_algorithm='localsgd', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, task='speech_to_text', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, tpu=False, train_subset='train_st', unk=3, update_epoch_batch_itr=False, update_freq=[8], update_ordered_indices_seed=False, use_audio_input=False, use_bmuf=False, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, user_dir=None, valid_subset='dev_st', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=10000, weight_decay=0.0, write_checkpoints_asynchronously=False, zero_sharding='none'), 'criterion': {'_name': 'label_smoothed_cross_entropy', 'label_smoothing': 0.1, 'report_accuracy': True, 'ignore_prefix_size': 0, 'sentence_avg': False}, 'optimizer': {'_name': 'adam', 'adam_betas': [0.9, 0.999], 'adam_eps': 1e-08, 'weight_decay': 0.0, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [0.002]}, 'lr_scheduler': {'_name': 'inverse_sqrt', 'warmup_updates': 10000, 'warmup_init_lr': -1.0, 'lr': [0.002]}, 'scoring': {'_name': 'bleu', 'pad': 1, 'eos': 2, 'unk': 3}, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}, 'simul_type': None}
2025-05-24 01:32:05 | INFO | fairseq.tasks.speech_to_text | dictionary size (spm_unigram8000_st.txt): 8,000
2025-05-24 01:32:05 | WARNING | fairseq.models.speech_to_text.s2t_transformer | skipped pretraining because /scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.ptls does not exist
2025-05-24 01:32:05 | WARNING | root | !!!!! MLTA is used !!!!!
2025-05-24 01:32:06 | INFO | fairseq_cli.train | S2TTransformerModel(
  (encoder): S2TTransformerEncoder(
    (dropout_module): FairseqDropout()
    (subsample): Conv1dSubsampler(
      (conv_layers): ModuleList(
        (0): Conv1d(80, 1024, kernel_size=(5,), stride=(2,), padding=(2,))
        (1): Conv1d(512, 1024, kernel_size=(5,), stride=(2,), padding=(2,))
      )
    )
    (embed_positions): SinusoidalPositionalEmbedding()
    (transformer_layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (6): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (7): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (8): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (9): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (10): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (11): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
    )
    (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (decoder): MLTADecoderOnly(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(8000, 512, padding_idx=1)
    (embed_positions): None
    (layers): ModuleList(
      (0): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (1): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (2): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (3): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (4): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (5): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (6): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (7): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (8): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
    )
    (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    (output_projection): Linear(in_features=512, out_features=8000, bias=False)
    (projector): EncoderProjectorConcat(
      (linear1): Linear(in_features=512, out_features=256, bias=True)
      (relu): ReLU()
      (linear2): Linear(in_features=256, out_features=512, bias=True)
    )
  )
)
2025-05-24 01:32:06 | INFO | fairseq_cli.train | task: SpeechToTextTask
2025-05-24 01:32:06 | INFO | fairseq_cli.train | model: S2TTransformerModel
2025-05-24 01:32:06 | INFO | fairseq_cli.train | criterion: LabelSmoothedCrossEntropyCriterion
2025-05-24 01:32:06 | INFO | fairseq_cli.train | num. shared model params: 78,119,808 (num. trained: 78,119,808)
2025-05-24 01:32:06 | INFO | fairseq_cli.train | num. expert model params: 0 (num. trained: 0)
2025-05-24 01:32:06 | INFO | fairseq.tasks.speech_to_text | pre-tokenizer: {'tokenizer': None}
2025-05-24 01:32:06 | INFO | fairseq.tasks.speech_to_text | tokenizer: {'bpe': 'sentencepiece', 'sentencepiece_model': '/scratch/kd502/save/MuST-C/en-de/spm_unigram8000_st.model'}
2025-05-24 01:32:06 | WARNING | fairseq.data.audio.data_cfg | Auto converting transforms into feature_transforms, but transforms will be deprecated in the future. Please update this in the config.
2025-05-24 01:32:06 | INFO | fairseq.data.audio.speech_to_text_dataset | 'dev_st' has 0.00% OOV
2025-05-24 01:32:06 | INFO | fairseq.data.audio.speech_to_text_dataset | SpeechToTextDataset(split="dev_st", n_samples=1_418, prepend_tgt_lang_tag=False, n_frames_per_step=1, shuffle=False, feature_transforms=CompositeAudioFeatureTransform(
    UtteranceCMVN(norm_means=True, norm_vars=True)
), waveform_transforms=None, dataset_transforms=CompositeAudioDatasetTransform(
))
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wq.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wkv_a.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wkv_b.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wo.bias
2025-05-24 01:32:07 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.output_projection.bias
2025-05-24 01:32:07 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2025-05-24 01:32:07 | INFO | fairseq.utils | rank   0: capabilities =  8.9  ; total memory = 47.478 GB ; name = NVIDIA RTX 6000 Ada Generation          
2025-05-24 01:32:07 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2025-05-24 01:32:07 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2025-05-24 01:32:07 | INFO | fairseq_cli.train | max tokens per device = 40000 and max sentences per device = None
2025-05-24 01:32:07 | INFO | fairseq.trainer | Preparing to load checkpoint /scratch/kd502/open-source/mtla/experiments/speech_translation/tmp/checkpoint_last.pt
2025-05-24 01:32:07 | INFO | fairseq.trainer | No existing checkpoint found /scratch/kd502/open-source/mtla/experiments/speech_translation/tmp/checkpoint_last.pt
2025-05-24 01:32:07 | INFO | fairseq.trainer | loading train data for epoch 1
2025-05-24 01:32:07 | INFO | fairseq.tasks.speech_to_text | pre-tokenizer: {'tokenizer': None}
2025-05-24 01:32:07 | INFO | fairseq.tasks.speech_to_text | tokenizer: {'bpe': 'sentencepiece', 'sentencepiece_model': '/scratch/kd502/save/MuST-C/en-de/spm_unigram8000_st.model'}
2025-05-24 01:32:11 | INFO | fairseq.tasks.text_to_speech | Please install tensorboardX: pip install tensorboardX
2025-05-24 01:32:12 | INFO | datasets | PyTorch version 1.13.1 available.
2025-05-24 01:32:13 | INFO | fairseq_cli.train | {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 100, 'log_format': None, 'log_file': None, 'aim_repo': None, 'aim_run_hash': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': False, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 128, 'fp16_scale_window': None, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': None, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': None, 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': False, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_base_algorithm': 'localsgd', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': False, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'not_fsdp_flatten_parameters': False}, 'dataset': {'_name': None, 'num_workers': 4, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 40000, 'batch_size': None, 'required_batch_size_multiple': 8, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train_st', 'valid_subset': 'dev_st', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': False, 'max_tokens_valid': 40000, 'batch_size_valid': None, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0, 'grouped_shuffling': False, 'update_epoch_batch_itr': False, 'update_ordered_indices_seed': False}, 'optimization': {'_name': None, 'max_epoch': 0, 'max_update': 100000, 'stop_time_hours': 0.0, 'clip_norm': 10.0, 'sentence_avg': False, 'update_freq': [8], 'lr': [0.002], 'stop_min_lr': -1.0, 'use_bmuf': False, 'skip_remainder_batch': False, 'debug_param_names': False}, 'checkpoint': {'_name': None, 'save_dir': '/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', 'restore_file': 'checkpoint_last.pt', 'continue_once': None, 'finetune_from_model': None, 'reset_dataloader': False, 'reset_lr_scheduler': False, 'reset_meters': False, 'reset_optimizer': False, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': 1, 'keep_best_checkpoints': 10, 'no_save': False, 'no_epoch_checkpoints': False, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 1}, 'generation': {'_name': None, 'beam': 5, 'beam_mt': 0, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'max_len_a_mt': 0.0, 'max_len_b_mt': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'lenpen_mt': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'eos_token': None}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': Namespace(_name='s2t_decoder_only_MLTA_cross_xm', activation_dropout=0.15, activation_fn='relu', adam_betas=(0.9, 0.999), adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, aim_repo=None, aim_run_hash=None, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='s2t_decoder_only_MLTA_cross_xm', attention_dropout=0.15, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='accuracy', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=10.0, combine_valid_subsets=None, config_yaml='config_st.yaml', continue_once=None, conv_channels=1024, conv_kernel_sizes='5,5', conv_out_channels=256, conv_version='s2t_transformer', cpu=False, cpu_offload=False, criterion='label_smoothed_cross_entropy', curriculum=0, data='/scratch/kd502/save/MuST-C/en-de', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', debug_param_names=False, decoder_attention_heads=8, decoder_down_rate=2, decoder_embed_dim=512, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_kv_lora_rank=256, decoder_layerdrop=0.0, decoder_layers=9, decoder_learned_pos=False, decoder_normalize_before=True, decoder_output_dim=512, decoder_q_lora_rank=0, decoder_qk_nope_head_dim=64, decoder_qk_rope_head_dim=32, decoder_type='MLTA', decoder_v_head_dim=64, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, dropout=0.15, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_ffn_embed_dim=2048, encoder_freezing_updates=0, encoder_layers=12, encoder_normalize_before=True, encoder_projector_ds_rate=1, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', gradient_as_bucket_view=False, grouped_shuffling=False, heartbeat_timeout=-1, ignore_prefix_size=0, ignore_unused_valid_subsets=False, input_channels=1, keep_best_checkpoints=10, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=1, label_smoothing=0.1, load_checkpoint_on_all_dp_ranks=False, load_pretrained_encoder_from='/scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.pt', localsgd_frequency=3, log_file=None, log_format=None, log_interval=100, lr=[0.002], lr_scheduler='inverse_sqrt', max_epoch=0, max_source_positions=6000, max_target_positions=1024, max_tokens=40000, max_tokens_valid=40000, max_update=100000, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, model_parallel_size=1, multitask_config_yaml=None, no_cross_attention=True, no_epoch_checkpoints=False, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, not_fsdp_flatten_parameters=False, nprocs_per_node=1, num_shards=1, num_workers=4, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quantization_config_path=None, report_accuracy=True, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', save_dir='/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, shard_id=0, share_decoder_input_output_embed=False, simul_type=None, skip_invalid_size_inputs_valid_test=False, skip_remainder_batch=False, slowmo_base_algorithm='localsgd', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, task='speech_to_text', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, tpu=False, train_subset='train_st', unk=3, update_epoch_batch_itr=False, update_freq=[8], update_ordered_indices_seed=False, use_audio_input=False, use_bmuf=False, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, user_dir=None, valid_subset='dev_st', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=10000, weight_decay=0.0, write_checkpoints_asynchronously=False, zero_sharding='none'), 'task': Namespace(_name='speech_to_text', activation_dropout=0.15, activation_fn='relu', adam_betas=(0.9, 0.999), adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, aim_repo=None, aim_run_hash=None, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='s2t_decoder_only_MLTA_cross_xm', attention_dropout=0.15, azureml_logging=False, batch_size=None, batch_size_valid=None, best_checkpoint_metric='accuracy', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=10.0, combine_valid_subsets=None, config_yaml='config_st.yaml', continue_once=None, conv_channels=1024, conv_kernel_sizes='5,5', conv_out_channels=256, conv_version='s2t_transformer', cpu=False, cpu_offload=False, criterion='label_smoothed_cross_entropy', curriculum=0, data='/scratch/kd502/save/MuST-C/en-de', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', debug_param_names=False, decoder_attention_heads=8, decoder_down_rate=2, decoder_embed_dim=512, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_kv_lora_rank=256, decoder_layerdrop=0.0, decoder_layers=9, decoder_learned_pos=False, decoder_normalize_before=True, decoder_output_dim=512, decoder_q_lora_rank=0, decoder_qk_nope_head_dim=64, decoder_qk_rope_head_dim=32, decoder_type='MLTA', decoder_v_head_dim=64, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, dropout=0.15, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_ffn_embed_dim=2048, encoder_freezing_updates=0, encoder_layers=12, encoder_normalize_before=True, encoder_projector_ds_rate=1, eos=2, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, fp32_reduce_scatter=False, gen_subset='test', gradient_as_bucket_view=False, grouped_shuffling=False, heartbeat_timeout=-1, ignore_prefix_size=0, ignore_unused_valid_subsets=False, input_channels=1, keep_best_checkpoints=10, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=1, label_smoothing=0.1, load_checkpoint_on_all_dp_ranks=False, load_pretrained_encoder_from='/scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.pt', localsgd_frequency=3, log_file=None, log_format=None, log_interval=100, lr=[0.002], lr_scheduler='inverse_sqrt', max_epoch=0, max_source_positions=6000, max_target_positions=1024, max_tokens=40000, max_tokens_valid=40000, max_update=100000, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, model_parallel_size=1, multitask_config_yaml=None, no_cross_attention=True, no_epoch_checkpoints=False, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, not_fsdp_flatten_parameters=False, nprocs_per_node=1, num_shards=1, num_workers=4, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', pad=1, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', profile=False, quant_noise_pq=0, quantization_config_path=None, report_accuracy=True, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_logging=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='checkpoint_last.pt', save_dir='/scratch/kd502/open-source/mtla/experiments/speech_translation/tmp', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, shard_id=0, share_decoder_input_output_embed=False, simul_type=None, skip_invalid_size_inputs_valid_test=False, skip_remainder_batch=False, slowmo_base_algorithm='localsgd', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, task='speech_to_text', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, tpu=False, train_subset='train_st', unk=3, update_epoch_batch_itr=False, update_freq=[8], update_ordered_indices_seed=False, use_audio_input=False, use_bmuf=False, use_old_adam=False, use_plasma_view=False, use_sharded_state=False, user_dir=None, valid_subset='dev_st', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, wandb_project=None, warmup_init_lr=-1, warmup_updates=10000, weight_decay=0.0, write_checkpoints_asynchronously=False, zero_sharding='none'), 'criterion': {'_name': 'label_smoothed_cross_entropy', 'label_smoothing': 0.1, 'report_accuracy': True, 'ignore_prefix_size': 0, 'sentence_avg': False}, 'optimizer': {'_name': 'adam', 'adam_betas': [0.9, 0.999], 'adam_eps': 1e-08, 'weight_decay': 0.0, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [0.002]}, 'lr_scheduler': {'_name': 'inverse_sqrt', 'warmup_updates': 10000, 'warmup_init_lr': -1.0, 'lr': [0.002]}, 'scoring': {'_name': 'bleu', 'pad': 1, 'eos': 2, 'unk': 3}, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}, 'simul_type': None}
2025-05-24 01:32:13 | INFO | fairseq.tasks.speech_to_text | dictionary size (spm_unigram8000_st.txt): 8,000
2025-05-24 01:32:13 | WARNING | fairseq.models.speech_to_text.s2t_transformer | skipped pretraining because /scratch/kd502/fairseq/examples/speech_to_text/exp_mustc/ASR_Save/mustc_de_st_transformer_s.pt does not exist
2025-05-24 01:32:13 | WARNING | root | !!!!! MLTA is used !!!!!
2025-05-24 01:32:14 | INFO | fairseq_cli.train | S2TTransformerModel(
  (encoder): S2TTransformerEncoder(
    (dropout_module): FairseqDropout()
    (subsample): Conv1dSubsampler(
      (conv_layers): ModuleList(
        (0): Conv1d(80, 1024, kernel_size=(5,), stride=(2,), padding=(2,))
        (1): Conv1d(512, 1024, kernel_size=(5,), stride=(2,), padding=(2,))
      )
    )
    (embed_positions): SinusoidalPositionalEmbedding()
    (transformer_layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (6): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (7): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (8): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (9): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (10): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (11): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
    )
    (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (decoder): MLTADecoderOnly(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(8000, 512, padding_idx=1)
    (embed_positions): None
    (layers): ModuleList(
      (0): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (1): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (2): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (3): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (4): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (5): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (6): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (7): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
      (8): MLTADecoderOnlyLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadLatentTemporalAttention(
          (wq): Linear(in_features=512, out_features=768, bias=False)
          (wkv_a): Linear(in_features=512, out_features=288, bias=False)
          (kv_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (wkv_b): Linear(in_features=256, out_features=1024, bias=False)
          (wo): Linear(in_features=512, out_features=512, bias=False)
          (hypernet_down): HyperNetwork(
            (fc_c): Linear(in_features=256, out_features=64, bias=True)
            (fc_p): Linear(in_features=256, out_features=64, bias=True)
          )
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      )
    )
    (layer_norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    (output_projection): Linear(in_features=512, out_features=8000, bias=False)
    (projector): EncoderProjectorConcat(
      (linear1): Linear(in_features=512, out_features=256, bias=True)
      (relu): ReLU()
      (linear2): Linear(in_features=256, out_features=512, bias=True)
    )
  )
)
2025-05-24 01:32:14 | INFO | fairseq_cli.train | task: SpeechToTextTask
2025-05-24 01:32:14 | INFO | fairseq_cli.train | model: S2TTransformerModel
2025-05-24 01:32:14 | INFO | fairseq_cli.train | criterion: LabelSmoothedCrossEntropyCriterion
2025-05-24 01:32:14 | INFO | fairseq_cli.train | num. shared model params: 78,119,808 (num. trained: 78,119,808)
2025-05-24 01:32:14 | INFO | fairseq_cli.train | num. expert model params: 0 (num. trained: 0)
2025-05-24 01:32:14 | INFO | fairseq.tasks.speech_to_text | pre-tokenizer: {'tokenizer': None}
2025-05-24 01:32:14 | INFO | fairseq.tasks.speech_to_text | tokenizer: {'bpe': 'sentencepiece', 'sentencepiece_model': '/scratch/kd502/save/MuST-C/en-de/spm_unigram8000_st.model'}
2025-05-24 01:32:14 | WARNING | fairseq.data.audio.data_cfg | Auto converting transforms into feature_transforms, but transforms will be deprecated in the future. Please update this in the config.
2025-05-24 01:32:14 | INFO | fairseq.data.audio.speech_to_text_dataset | 'dev_st' has 0.00% OOV
2025-05-24 01:32:14 | INFO | fairseq.data.audio.speech_to_text_dataset | SpeechToTextDataset(split="dev_st", n_samples=1_418, prepend_tgt_lang_tag=False, n_frames_per_step=1, shuffle=False, feature_transforms=CompositeAudioFeatureTransform(
    UtteranceCMVN(norm_means=True, norm_vars=True)
), waveform_transforms=None, dataset_transforms=CompositeAudioDatasetTransform(
))
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.0.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.1.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.2.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.3.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.4.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.5.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.6.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.7.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wq.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wkv_a.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wkv_b.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.layers.8.self_attn.wo.bias
2025-05-24 01:32:14 | INFO | fairseq.trainer | detected shared parameter: decoder.layers.0.self_attn.wq.bias <- decoder.output_projection.bias
2025-05-24 01:32:14 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2025-05-24 01:32:14 | INFO | fairseq.utils | rank   0: capabilities =  8.9  ; total memory = 47.478 GB ; name = NVIDIA RTX 6000 Ada Generation          
2025-05-24 01:32:14 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2025-05-24 01:32:14 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2025-05-24 01:32:14 | INFO | fairseq_cli.train | max tokens per device = 40000 and max sentences per device = None
2025-05-24 01:32:14 | INFO | fairseq.trainer | Preparing to load checkpoint /scratch/kd502/open-source/mtla/experiments/speech_translation/tmp/checkpoint_last.pt
2025-05-24 01:32:14 | INFO | fairseq.trainer | No existing checkpoint found /scratch/kd502/open-source/mtla/experiments/speech_translation/tmp/checkpoint_last.pt
2025-05-24 01:32:14 | INFO | fairseq.trainer | loading train data for epoch 1
2025-05-24 01:32:14 | INFO | fairseq.tasks.speech_to_text | pre-tokenizer: {'tokenizer': None}
2025-05-24 01:32:14 | INFO | fairseq.tasks.speech_to_text | tokenizer: {'bpe': 'sentencepiece', 'sentencepiece_model': '/scratch/kd502/save/MuST-C/en-de/spm_unigram8000_st.model'}
2025-05-24 01:32:16 | WARNING | fairseq.data.audio.data_cfg | Auto converting transforms into feature_transforms, but transforms will be deprecated in the future. Please update this in the config.
2025-05-24 01:32:20 | INFO | fairseq.data.audio.speech_to_text_dataset | 'train_st' has 0.00% OOV
2025-05-24 01:32:20 | INFO | fairseq.data.audio.speech_to_text_dataset | SpeechToTextDataset(split="train_st", n_samples=225_277, prepend_tgt_lang_tag=False, n_frames_per_step=1, shuffle=False, feature_transforms=CompositeAudioFeatureTransform(
    UtteranceCMVN(norm_means=True, norm_vars=True)
    SpecAugmentTransform(time_warp_w=0, freq_mask_n=1, freq_mask_f=27, time_mask_n=1, time_mask_t=100, time_mask_p=1.0)
), waveform_transforms=None, dataset_transforms=CompositeAudioDatasetTransform(
))
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | can_reuse_epoch_itr = True
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | reuse_dataloader = True
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | rebuild_batches = False
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | creating new batches for epoch 1
2025-05-24 01:32:20 | INFO | fairseq.trainer | NOTE: your device may support faster training with --fp16 or --amp
2025-05-24 01:32:20 | INFO | fairseq_cli.train | begin dry-run validation on "dev_st" subset
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | can_reuse_epoch_itr = True
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | reuse_dataloader = True
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | rebuild_batches = False
2025-05-24 01:32:20 | INFO | fairseq.tasks.fairseq_task | creating new batches for epoch 1
2025-05-24 01:32:21 | INFO | fairseq.data.iterators | grouped total_num_itrs = 491
2025-05-24 01:32:21 | INFO | fairseq.trainer | begin training epoch 1
2025-05-24 01:32:21 | INFO | fairseq_cli.train | Start iterating over samples
